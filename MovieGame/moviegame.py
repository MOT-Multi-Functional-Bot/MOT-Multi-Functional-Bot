from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import CallbackContext, ConversationHandler
from main_commands import log_input
import random

PLAYMODE, GUESS = range(2)


def movieGuessingGame(update: Update, context: CallbackContext) -> int:
    """Movie guessing Game"""
    log_input(update)
    reply_keyboard = [["Easy", "Hard"]]
    update.message.reply_text(
        "You have started the movie guessing game!\n\n" "Which playmode do you chose?",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard,
            one_time_keyboard=True,
            input_field_placeholder="Easy or Hard Mode?",
        ),
    )
    return PLAYMODE


def playMode(update: Update, context: CallbackContext) -> int:
    log_input(update)

    questions = [
        ("üë≥‚Äç‚ôÇÔ∏è üö£ üêØ", "life of pi"),
        ("üëß üê∏ üëë", "princess and the frog"),
        ("üöÄ ‚ú® üë© üåç", "gravity"),
        ("5Ô∏è‚É£ 0Ô∏è‚É£ 0Ô∏è‚É£ üåû ‚ù§Ô∏è", "500 days of summer"),
        ("üî™ üë© üöø", "psycho"),
        ("üëß ‚ùó ‚ùì ‚úàÔ∏è", "Airplane"),
        ("üë® üë® ‚ù§Ô∏è üèîÔ∏è", "Brokeback mountain"),
        ("üáØüáµ üí£ üá∫üá∏ ‚öì", "pearl harbour"),
        ("üë† üë∞‚Äç‚ôÄÔ∏è ‚åö üåô", "cinderella"),
        ("üë¶ üè† üë® üë®", "home alone"),
        ("üëº ‚õ™ üëπ", "angels and demons"),
        ("üêÄ üç≤ üçõ üçù üçú", "ratatouille"),
        ("‚úèÔ∏è üìî üíè", "the notebook"),
        ("üê≥ ‚û°Ô∏è üåä", "free willy"),
        ("üå©Ô∏è üë® üî®", "thor"),
        ("ü©∏ üíç", "Blood diamond"),
        ("üé• üë£ üëª", "Scary Movie"),
        ("üë® ‚û°Ô∏è üéÖ", "Santa Clause"),
        ("üåç üêí üêí üêí", "Planet of the apes"),
        ("üêº üëä", "Kung Fu Panda"),
        ("üë® üß∏ üçª", "Ted"),
        ("üë¶ üç´ üè≠", "Charlie and the chocolate factory"),
        ("üòà üëó üë†", "The devil wears prada"),
        ("üö¢ üßä üèîÔ∏è", "Titanic"),
        ("üë¶ üíç ‚û°Ô∏è üåã", "Lord of the rings"),
        ("üëΩ üìû üîà üë¶ üö≤ üåï", "ET"),
        ("üç¥ üôè ‚ù§Ô∏è", "Eat Pray Love"),
        ("üíá‚Äç‚ôÄÔ∏è üá´üá∑ üë∏ üé∂", "Les mis√©rables"),
        ("üëë üí¨ üé§", "The kings speech"),
        ("üåÉ üè¶ üë® üî¶ üóø üêí", "night at the museum"),
    ]
    quiz = random.randint(0, len(questions)-1)
    false1 = random.randint(0, len(questions)-1)
    false2 = random.randint(0, len(questions)-1)
    false3 = random.randint(0, len(questions)-1)
    global playmodus, answer, guesscount
    guesscount = 0
    answer = questions[quiz][1]
    update.message.reply_text("You chose" + update.message.text + "mode")
    if update.message.text == "Easy":
        playmodus = "Easy"
        update.message.reply_text("Easy Peasy Lemon Squeezy")
        reply_keyboard = [
            {answer, questions[false1][1], questions[false2][1], questions[false3][1]}
        ]
        update.message.reply_text(
            "The movie you need to guess is:" + questions[quiz][0],
            reply_markup=ReplyKeyboardMarkup(
                reply_keyboard,
                one_time_keyboard=True,
                input_field_placeholder="A, B, C oder D?",
            ),
        )
    else:
        playmodus = "Hard"
        update.message.reply_text("Wow! Viel Gl√ºck!")
        update.message.reply_text("The movie you need to guess is:" + questions[quiz][0])        
    return GUESS




def movieGuess(update: Update, context: CallbackContext) -> None:
    log_input(update)
    if playmodus == "Easy":
        if update.message.text != answer:
            update.message.reply_text(
                "Verdammt, knapp daneben, die richtige Antwort w√§re " + answer
            )
        else:
            update.message.reply_text("Herzlichen Gl√ºckwunsch! Du hast gewonnen!")
        return ConversationHandler.END
    elif playmodus == "Hard":
        if update.message.text.casefold() == answer.casefold():
            update.message.reply_text("Herzlichen Gl√ºckwunsch! Du hast gewonnen!")
            return ConversationHandler.END

        elif update.message.text != answer:
            global guesscount
            guesscount += 1
            if guesscount < 4:
                update.message.reply_text(
                    "Das ist leider nicht richtig du hast noch "
                    + str(5 - guesscount)
                    + " Versuch(e)!"
                )
                return GUESS
            else:
                update.message.reply_text(
                    "Du hast leider verloren! Die richtige Antwort w√§re "
                    + answer
                    + " gewesen."
                )
                return ConversationHandler.END


def stopgame(update: Update, context: CallbackContext) -> int:
    log_input(update)
    update.message.reply_text("You ended the game")
    return ConversationHandler.END
